<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="E:/AIMLGLIM/SQL/project/New Orders.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="3"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="125"/><column_width id="3" width="2151"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><current_table name="4,7:mainADDRESS"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="ADDRESS" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort><column index="1" mode="0"/></sort><column_widths><column index="1" value="124"/><column index="2" value="300"/><column index="3" value="300"/><column index="4" value="141"/><column index="5" value="124"/><column index="6" value="89"/><column index="7" value="93"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="CARTON" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="113"/><column index="2" value="52"/><column index="3" value="71"/><column index="4" value="77"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="ONLINE_CUSTOMER" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="137"/><column index="2" value="176"/><column index="3" value="176"/><column index="4" value="225"/><column index="5" value="176"/><column index="6" value="124"/><column index="7" value="261"/><column index="8" value="212"/><column index="9" value="187"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="ORDER_HEADER" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort><column index="2" mode="0"/></sort><column_widths><column index="1" value="102"/><column index="2" value="137"/><column index="3" value="126"/><column index="4" value="148"/><column index="5" value="154"/><column index="6" value="148"/><column index="7" value="228"/><column index="8" value="118"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="ORDER_ITEMS" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="102"/><column index="3" value="194"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="PRODUCT" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="2" value="300"/><column index="3" value="217"/><column index="4" value="156"/><column index="5" value="258"/><column index="6" value="52"/><column index="7" value="71"/><column index="8" value="77"/><column index="9" value="81"/></column_widths><filter_values><column index="1" value="205"/></filter_values><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="PRODUCT_CLASS" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="217"/><column index="2" value="215"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="SHIPPER" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="118"/><column index="2" value="147"/><column index="3" value="157"/><column index="4" value="179"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="SQL1.sql">SELECT PRODUCT_CLASS_CODE,PRODUCT_ID,PRODUCT_DESC,PRODUCT_PRICE as org_price,
(CASE 
  WHEN PRODUCT_CLASS_CODE=2050 THEN PRODUCT_PRICE+2000
  WHEN PRODUCT_CLASS_CODE=2051 THEN PRODUCT_PRICE+500
  WHEN PRODUCT_CLASS_CODE=2052 THEN PRODUCT_PRICE+600
  ELSE PRODUCT_PRICE
  END) AS &quot;Updated Price&quot;
FROM PRODUCT
ORDER BY PRODUCT_CLASS_CODE DESC;</sql><sql name="SQL2.sql">SELECT PRODUCT_CLASS_DESC, PRODUCT_ID,PRODUCT_DESC, PRODUCT_QUANTITY_AVAIL,
(CASE 
  WHEN PRODUCT_CLASS_DESC=&quot;Electronics&quot; OR PRODUCT_CLASS_DESC=&quot;Computer&quot; 
  THEN
     (CASE WHEN PRODUCT_QUANTITY_AVAIL=0 THEN &quot;No Stock&quot;
	 	   WHEN PRODUCT_QUANTITY_AVAIL&lt;=10 THEN &quot;Low stock&quot;
	       WHEN PRODUCT_QUANTITY_AVAIL&gt;=11 and PRODUCT_QUANTITY_AVAIL &lt;=30 THEN &quot;In stock&quot;
		   WHEN PRODUCT_QUANTITY_AVAIL&gt;31 THEN &quot;Enough stock&quot;
		   END)
   WHEN PRODUCT_CLASS_DESC=&quot;Stationery&quot; OR PRODUCT_CLASS_DESC=&quot;Clothes&quot; 
   THEN
     (CASE WHEN PRODUCT_QUANTITY_AVAIL=0 THEN &quot;No Stock&quot;
	 	   WHEN PRODUCT_QUANTITY_AVAIL&lt;=20 THEN &quot;Low stock&quot;
	       WHEN PRODUCT_QUANTITY_AVAIL&gt;=21 and PRODUCT_QUANTITY_AVAIL &lt;=80 THEN &quot;In stock&quot;
		   WHEN PRODUCT_QUANTITY_AVAIL&gt;81 THEN &quot;Enough stock&quot;
	   END)
	ELSE
     (CASE WHEN PRODUCT_QUANTITY_AVAIL=0 THEN &quot;No Stock&quot;
	 	   WHEN PRODUCT_QUANTITY_AVAIL&lt;=15 THEN &quot;Low stock&quot;
	       WHEN PRODUCT_QUANTITY_AVAIL&gt;=16 and PRODUCT_QUANTITY_AVAIL &lt;=50 THEN &quot;In stock&quot;
		   WHEN PRODUCT_QUANTITY_AVAIL&gt;51 THEN &quot;Enough stock&quot;
	   END)
  END) as STOCK
FROM PRODUCT
JOIN PRODUCT_CLASS ON PRODUCT.PRODUCT_CLASS_CODE=PRODUCT_CLASS.PRODUCT_CLASS_CODE</sql><sql name="SQL3.sql">SELECT COUNTRY, count(CITY) as &quot;Number of Cities&quot;
FROM
(
SELECT COUNTRY, CITY
FROM ADDRESS
WHERE COUNTRY NOT LIKE &quot;USA%&quot; AND COUNTRY NOT LIKE &quot;Malaysia%&quot;
)
GROUP BY COUNTRY 
HAVING count(CITY)&gt;1
ORDER BY COUNTRY DESC



</sql><sql name="SQL4.sql">SELECT ONLINE_CUSTOMER.CUSTOMER_ID,  (ONLINE_CUSTOMER.CUSTOMER_FNAME || &quot; &quot;|| ONLINE_CUSTOMER.CUSTOMER_LNAME) as Fullname, ADDRESS.CITY ,
PINCODE,
ORDER_HEADER.ORDER_ID,ORDER_HEADER.ORDER_DATE, PRODUCT_CLASS.PRODUCT_CLASS_DESC, PRODUCT.PRODUCT_DESC, 
(PRODUCT.PRODUCT_PRICE*PRODUCT.PRODUCT_QUANTITY_AVAIL) as subtotal

FROM ONLINE_CUSTOMER
JOIN ADDRESS  ON ONLINE_CUSTOMER.ADDRESS_ID=ADDRESS.ADDRESS_ID 
JOIN ORDER_HEADER ON ORDER_HEADER.CUSTOMER_ID = ONLINE_CUSTOMER.CUSTOMER_ID
JOIN ORDER_ITEMS  ON ORDER_ITEMS.ORDER_ID=ORDER_HEADER.ORDER_ID 
JOIN PRODUCT  ON ORDER_ITEMS.PRODUCT_ID=PRODUCT.PRODUCT_ID
JOIN PRODUCT_CLASS ON PRODUCT.PRODUCT_CLASS_CODE=PRODUCT_CLASS.PRODUCT_CLASS_CODE

WHERE CAST(PINCODE as TEXT) NOT like &quot;%0%&quot; and ORDER_HEADER.ORDER_STATUS=&quot;Shipped&quot; 

ORDER BY fullname,ORDER_HEADER.ORDER_DATE,subtotal




</sql><sql name="SQL5.sql">SELECT one.PRODUCT_ID,one.PRODUCT_DESC, sum(one.product_quantity) as total_quantity FROM

(SELECT ORDER_ITEMS.ORDER_ID as od,ORDER_ITEMS.PRODUCT_ID,PRODUCT.PRODUCT_DESC,ORDER_ITEMS.PRODUCT_QUANTITY
   FROM PRODUCT 
   JOIN ORDER_ITEMS ON PRODUCT.PRODUCT_ID=ORDER_ITEMS.PRODUCT_ID ) as one

     JOIN
	 
(SELECT ORDER_ITEMS.ORDER_ID as od,ORDER_ITEMS.PRODUCT_ID,PRODUCT.PRODUCT_DESC,ORDER_ITEMS.PRODUCT_QUANTITY
   FROM PRODUCT 
   JOIN ORDER_ITEMS ON PRODUCT.PRODUCT_ID=ORDER_ITEMS.PRODUCT_ID 
   WHERE ORDER_ITEMS.PRODUCT_ID=201) as two
   
   ON one.od=two.od
   GROUP BY one.PRODUCT_ID
   ORDER BY total_quantity desc limit 1
   
   
  
   
   
  


   
 


  


</sql><sql name="SQL6.sql">select one.CUSTOMER_ID,(one.CUSTOMER_FNAME || &quot; &quot;|| one.CUSTOMER_LNAME) as Fullname,
one.CUSTOMER_EMAIL,two.ORDER_ID, PRODUCT_DESC, two.PRODUCT_QUANTITY,
(two.PRODUCT_QUANTITY * two.PRODUCT_PRICE) as subtotal
from

(SELECT * from ONLINE_CUSTOMER) as one

left join

(SELECT *
FROM ONLINE_CUSTOMER 
JOIN ORDER_HEADER ON ORDER_HEADER.CUSTOMER_ID = ONLINE_CUSTOMER.CUSTOMER_ID
LEFT JOIN ORDER_ITEMS  ON ORDER_ITEMS.ORDER_ID=ORDER_HEADER.ORDER_ID
LEFT JOIN PRODUCT  ON ORDER_ITEMS.PRODUCT_ID=PRODUCT.PRODUCT_ID) as two

on one.CUSTOMER_ID=two.CUSTOMER_ID
</sql><sql name="Q1_to_Q6_PART1.sql">/* QUESTION NUMBER : 1 */

SELECT PRODUCT_CLASS_CODE,PRODUCT_ID,PRODUCT_DESC,PRODUCT_PRICE as org_price,
(CASE 
  WHEN PRODUCT_CLASS_CODE=2050 THEN PRODUCT_PRICE+2000
  WHEN PRODUCT_CLASS_CODE=2051 THEN PRODUCT_PRICE+500
  WHEN PRODUCT_CLASS_CODE=2052 THEN PRODUCT_PRICE+600
  ELSE PRODUCT_PRICE
  END) AS &quot;Updated Price&quot;
FROM PRODUCT
ORDER BY PRODUCT_CLASS_CODE DESC;

/* ******************************************************* */

/* QUESTION NUMBER : 2 */

SELECT PRODUCT_CLASS_DESC, PRODUCT_ID,PRODUCT_DESC, PRODUCT_QUANTITY_AVAIL,
(CASE 
  WHEN PRODUCT_CLASS_DESC=&quot;Electronics&quot; OR PRODUCT_CLASS_DESC=&quot;Computer&quot; 
  THEN
     (CASE WHEN PRODUCT_QUANTITY_AVAIL=0 THEN &quot;No Stock&quot;
	 	   WHEN PRODUCT_QUANTITY_AVAIL&lt;=10 THEN &quot;Low stock&quot;
	       WHEN PRODUCT_QUANTITY_AVAIL&gt;=11 and PRODUCT_QUANTITY_AVAIL &lt;=30 THEN &quot;In stock&quot;
		   WHEN PRODUCT_QUANTITY_AVAIL&gt;31 THEN &quot;Enough stock&quot;
		   END)
   WHEN PRODUCT_CLASS_DESC=&quot;Stationery&quot; OR PRODUCT_CLASS_DESC=&quot;Clothes&quot; 
   THEN
     (CASE WHEN PRODUCT_QUANTITY_AVAIL=0 THEN &quot;No Stock&quot;
	 	   WHEN PRODUCT_QUANTITY_AVAIL&lt;=20 THEN &quot;Low stock&quot;
	       WHEN PRODUCT_QUANTITY_AVAIL&gt;=21 and PRODUCT_QUANTITY_AVAIL &lt;=80 THEN &quot;In stock&quot;
		   WHEN PRODUCT_QUANTITY_AVAIL&gt;81 THEN &quot;Enough stock&quot;
	   END)
	ELSE
     (CASE WHEN PRODUCT_QUANTITY_AVAIL=0 THEN &quot;No Stock&quot;
	 	   WHEN PRODUCT_QUANTITY_AVAIL&lt;=15 THEN &quot;Low stock&quot;
	       WHEN PRODUCT_QUANTITY_AVAIL&gt;=16 and PRODUCT_QUANTITY_AVAIL &lt;=50 THEN &quot;In stock&quot;
		   WHEN PRODUCT_QUANTITY_AVAIL&gt;51 THEN &quot;Enough stock&quot;
	   END)
  END) as STOCK
FROM PRODUCT
JOIN PRODUCT_CLASS ON PRODUCT.PRODUCT_CLASS_CODE=PRODUCT_CLASS.PRODUCT_CLASS_CODE;


/* ******************************************************* */

/* QUESTION NUMBER : 3 */


SELECT COUNTRY, count(CITY) as &quot;Number of Cities&quot;
FROM
(
SELECT COUNTRY, CITY
FROM ADDRESS
WHERE COUNTRY NOT LIKE &quot;USA%&quot; AND COUNTRY NOT LIKE &quot;Malaysia%&quot;
)
GROUP BY COUNTRY 
HAVING count(CITY)&gt;1
ORDER BY COUNTRY DESC ;

/* ******************************************************* */

/* QUESTION NUMBER : 4 */

SELECT ONLINE_CUSTOMER.CUSTOMER_ID,  (ONLINE_CUSTOMER.CUSTOMER_FNAME || &quot; &quot;|| ONLINE_CUSTOMER.CUSTOMER_LNAME) as Fullname, ADDRESS.CITY ,
PINCODE,
ORDER_HEADER.ORDER_ID,ORDER_HEADER.ORDER_DATE, PRODUCT_CLASS.PRODUCT_CLASS_DESC, PRODUCT.PRODUCT_DESC, 
(PRODUCT.PRODUCT_PRICE*PRODUCT.PRODUCT_QUANTITY_AVAIL) as subtotal

FROM ONLINE_CUSTOMER
JOIN ADDRESS  ON ONLINE_CUSTOMER.ADDRESS_ID=ADDRESS.ADDRESS_ID 
JOIN ORDER_HEADER ON ORDER_HEADER.CUSTOMER_ID = ONLINE_CUSTOMER.CUSTOMER_ID
JOIN ORDER_ITEMS  ON ORDER_ITEMS.ORDER_ID=ORDER_HEADER.ORDER_ID 
JOIN PRODUCT  ON ORDER_ITEMS.PRODUCT_ID=PRODUCT.PRODUCT_ID
JOIN PRODUCT_CLASS ON PRODUCT.PRODUCT_CLASS_CODE=PRODUCT_CLASS.PRODUCT_CLASS_CODE

WHERE CAST(PINCODE as TEXT) NOT like &quot;%0%&quot; and ORDER_HEADER.ORDER_STATUS=&quot;Shipped&quot; 

ORDER BY fullname,ORDER_HEADER.ORDER_DATE,subtotal ;


/* ******************************************************* */

/* QUESTION NUMBER : 5 */

SELECT one.PRODUCT_ID,one.PRODUCT_DESC, sum(one.product_quantity) as total_quantity FROM

(SELECT ORDER_ITEMS.ORDER_ID as od,ORDER_ITEMS.PRODUCT_ID,PRODUCT.PRODUCT_DESC,ORDER_ITEMS.PRODUCT_QUANTITY
   FROM PRODUCT 
   JOIN ORDER_ITEMS ON PRODUCT.PRODUCT_ID=ORDER_ITEMS.PRODUCT_ID ) as one

     JOIN
	 
(SELECT ORDER_ITEMS.ORDER_ID as od,ORDER_ITEMS.PRODUCT_ID,PRODUCT.PRODUCT_DESC,ORDER_ITEMS.PRODUCT_QUANTITY
   FROM PRODUCT 
   JOIN ORDER_ITEMS ON PRODUCT.PRODUCT_ID=ORDER_ITEMS.PRODUCT_ID 
   WHERE ORDER_ITEMS.PRODUCT_ID=201) as two
   
   ON one.od=two.od
   GROUP BY one.PRODUCT_ID
   ORDER BY total_quantity desc limit 1  ;
   
 
/* ******************************************************* */
 
/* QUESTION NUMBER : 6 */


select one.CUSTOMER_ID,(one.CUSTOMER_FNAME || &quot; &quot;|| one.CUSTOMER_LNAME) as Fullname,
one.CUSTOMER_EMAIL,two.ORDER_ID, PRODUCT_DESC, two.PRODUCT_QUANTITY,
(two.PRODUCT_QUANTITY * two.PRODUCT_PRICE) as subtotal
from

(SELECT * from ONLINE_CUSTOMER) as one

left join

(SELECT *
FROM ONLINE_CUSTOMER 
JOIN ORDER_HEADER ON ORDER_HEADER.CUSTOMER_ID = ONLINE_CUSTOMER.CUSTOMER_ID
LEFT JOIN ORDER_ITEMS  ON ORDER_ITEMS.ORDER_ID=ORDER_HEADER.ORDER_ID
LEFT JOIN PRODUCT  ON ORDER_ITEMS.PRODUCT_ID=PRODUCT.PRODUCT_ID) as two

on one.CUSTOMER_ID=two.CUSTOMER_ID ;
</sql><current_tab id="2"/></tab_sql></sqlb_project>
