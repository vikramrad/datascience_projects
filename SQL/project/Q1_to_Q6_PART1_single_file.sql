/* QUESTION NUMBER : 1 */

SELECT PRODUCT_CLASS_CODE,PRODUCT_ID,PRODUCT_DESC,PRODUCT_PRICE as org_price,
(CASE 
  WHEN PRODUCT_CLASS_CODE=2050 THEN PRODUCT_PRICE+2000
  WHEN PRODUCT_CLASS_CODE=2051 THEN PRODUCT_PRICE+500
  WHEN PRODUCT_CLASS_CODE=2052 THEN PRODUCT_PRICE+600
  ELSE PRODUCT_PRICE
  END) AS "Updated Price"
FROM PRODUCT
ORDER BY PRODUCT_CLASS_CODE DESC;

/* ******************************************************* */

/* QUESTION NUMBER : 2 */

SELECT PRODUCT_CLASS_DESC, PRODUCT_ID,PRODUCT_DESC, PRODUCT_QUANTITY_AVAIL,
(CASE 
  WHEN PRODUCT_CLASS_DESC="Electronics" OR PRODUCT_CLASS_DESC="Computer" 
  THEN
     (CASE WHEN PRODUCT_QUANTITY_AVAIL=0 THEN "No Stock"
	 	   WHEN PRODUCT_QUANTITY_AVAIL<=10 THEN "Low stock"
	       WHEN PRODUCT_QUANTITY_AVAIL>=11 and PRODUCT_QUANTITY_AVAIL <=30 THEN "In stock"
		   WHEN PRODUCT_QUANTITY_AVAIL>31 THEN "Enough stock"
		   END)
   WHEN PRODUCT_CLASS_DESC="Stationery" OR PRODUCT_CLASS_DESC="Clothes" 
   THEN
     (CASE WHEN PRODUCT_QUANTITY_AVAIL=0 THEN "No Stock"
	 	   WHEN PRODUCT_QUANTITY_AVAIL<=20 THEN "Low stock"
	       WHEN PRODUCT_QUANTITY_AVAIL>=21 and PRODUCT_QUANTITY_AVAIL <=80 THEN "In stock"
		   WHEN PRODUCT_QUANTITY_AVAIL>81 THEN "Enough stock"
	   END)
	ELSE
     (CASE WHEN PRODUCT_QUANTITY_AVAIL=0 THEN "No Stock"
	 	   WHEN PRODUCT_QUANTITY_AVAIL<=15 THEN "Low stock"
	       WHEN PRODUCT_QUANTITY_AVAIL>=16 and PRODUCT_QUANTITY_AVAIL <=50 THEN "In stock"
		   WHEN PRODUCT_QUANTITY_AVAIL>51 THEN "Enough stock"
	   END)
  END) as STOCK
FROM PRODUCT
JOIN PRODUCT_CLASS ON PRODUCT.PRODUCT_CLASS_CODE=PRODUCT_CLASS.PRODUCT_CLASS_CODE;


/* ******************************************************* */

/* QUESTION NUMBER : 3 */


SELECT COUNTRY, count(CITY) as "Number of Cities"
FROM
(
SELECT COUNTRY, CITY
FROM ADDRESS
WHERE COUNTRY NOT LIKE "USA%" AND COUNTRY NOT LIKE "Malaysia%"
)
GROUP BY COUNTRY 
HAVING count(CITY)>1
ORDER BY COUNTRY DESC ;

/* ******************************************************* */

/* QUESTION NUMBER : 4 */

SELECT ONLINE_CUSTOMER.CUSTOMER_ID,  (ONLINE_CUSTOMER.CUSTOMER_FNAME || " "|| ONLINE_CUSTOMER.CUSTOMER_LNAME) as Fullname, ADDRESS.CITY ,
PINCODE,
ORDER_HEADER.ORDER_ID,ORDER_HEADER.ORDER_DATE, PRODUCT_CLASS.PRODUCT_CLASS_DESC, PRODUCT.PRODUCT_DESC, 
(PRODUCT.PRODUCT_PRICE*PRODUCT.PRODUCT_QUANTITY_AVAIL) as subtotal

FROM ONLINE_CUSTOMER
JOIN ADDRESS  ON ONLINE_CUSTOMER.ADDRESS_ID=ADDRESS.ADDRESS_ID 
JOIN ORDER_HEADER ON ORDER_HEADER.CUSTOMER_ID = ONLINE_CUSTOMER.CUSTOMER_ID
JOIN ORDER_ITEMS  ON ORDER_ITEMS.ORDER_ID=ORDER_HEADER.ORDER_ID 
JOIN PRODUCT  ON ORDER_ITEMS.PRODUCT_ID=PRODUCT.PRODUCT_ID
JOIN PRODUCT_CLASS ON PRODUCT.PRODUCT_CLASS_CODE=PRODUCT_CLASS.PRODUCT_CLASS_CODE

WHERE CAST(PINCODE as TEXT) NOT like "%0%" and ORDER_HEADER.ORDER_STATUS="Shipped" 

ORDER BY fullname,ORDER_HEADER.ORDER_DATE,subtotal ;


/* ******************************************************* */

/* QUESTION NUMBER : 5 */

SELECT one.PRODUCT_ID,one.PRODUCT_DESC, sum(one.product_quantity) as total_quantity FROM

(SELECT ORDER_ITEMS.ORDER_ID as od,ORDER_ITEMS.PRODUCT_ID,PRODUCT.PRODUCT_DESC,ORDER_ITEMS.PRODUCT_QUANTITY
   FROM PRODUCT 
   JOIN ORDER_ITEMS ON PRODUCT.PRODUCT_ID=ORDER_ITEMS.PRODUCT_ID ) as one

     JOIN
	 
(SELECT ORDER_ITEMS.ORDER_ID as od,ORDER_ITEMS.PRODUCT_ID,PRODUCT.PRODUCT_DESC,ORDER_ITEMS.PRODUCT_QUANTITY
   FROM PRODUCT 
   JOIN ORDER_ITEMS ON PRODUCT.PRODUCT_ID=ORDER_ITEMS.PRODUCT_ID 
   WHERE ORDER_ITEMS.PRODUCT_ID=201) as two
   
   ON one.od=two.od
   GROUP BY one.PRODUCT_ID
   ORDER BY total_quantity desc limit 1  ;
   
 
/* ******************************************************* */
 
/* QUESTION NUMBER : 6 */


select one.CUSTOMER_ID,(one.CUSTOMER_FNAME || " "|| one.CUSTOMER_LNAME) as Fullname,
one.CUSTOMER_EMAIL,two.ORDER_ID, PRODUCT_DESC, two.PRODUCT_QUANTITY,
(two.PRODUCT_QUANTITY * two.PRODUCT_PRICE) as subtotal
from

(SELECT * from ONLINE_CUSTOMER) as one

left join

(SELECT *
FROM ONLINE_CUSTOMER 
JOIN ORDER_HEADER ON ORDER_HEADER.CUSTOMER_ID = ONLINE_CUSTOMER.CUSTOMER_ID
LEFT JOIN ORDER_ITEMS  ON ORDER_ITEMS.ORDER_ID=ORDER_HEADER.ORDER_ID
LEFT JOIN PRODUCT  ON ORDER_ITEMS.PRODUCT_ID=PRODUCT.PRODUCT_ID) as two

on one.CUSTOMER_ID=two.CUSTOMER_ID ;
